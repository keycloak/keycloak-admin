{
  "clients": {
    "clientAuthorization": "Client authorization",
    "implicitFlow": "Implicit flow",
    "createClient": "Create client",
    "importClient": "Import client",
    "clientID": "Client ID",
    "homeURL": "Home URL",
    "webOrigins": "Web origins",
    "adminURL": "Admin URL",
    "formatOption": "Format option",
    "downloadAdaptorTitle": "Download adaptor configs",
    "credentials": "Credentials",
    "roles": "Roles",
    "clientScopes": "Client scopes",
    "addClientScope": "Add client scope",
    "addClientScopesTo": "Add client scopes to {{clientId}}",
    "clientScopeRemoveSuccess": "Scope mapping successfully removed",
    "clientScopeRemoveError": "Could not remove the scope mapping {{error}}",
    "clientScopeSuccess": "Scope mapping successfully updated",
    "clientScopeError": "Could not update the scope mapping {{error}}",
    "searchByName": "Search by name",
    "setup": "Setup",
    "evaluate": "Evaluate",
    "changeTypeTo": "Change type to",
    "assignRole": "Assign role",
    "clientScope": {
      "default": "Default",
      "optional": "Optional"
    },
    "clientScopeSearch": {
      "client": "Client scope",
      "assigned": "Assigned type"
    },
    "assignedType": "Assigned type",
    "hideInheritedRoles": "Hide inherited roles",
    "inherentFrom": "Inherited from",
    "emptyClientScopes": "This client doesn't have any added client scopes",
    "emptyClientScopesInstructions": "There are currently no client scopes linked to this client. You can add existing client scopes to this client to share protocol mappers and roles.",
    "emptyClientScopesPrimaryAction": "Add client scopes",
    "scopeParameter": "Scope parameter",
    "scopeParameterPlaceholder": "Select scope parameters",
    "effectiveProtocolMappers": "Effective protocol mappers",
    "effectiveRoleScopeMappings": "Effective role scope mappings",
    "generatedAccessToken": "Generated access token",
    "searchForProtocol": "Search protocol mapper",
    "parentClientScope": "Parent client scope",
    "searchForRole": "Search role",
    "origin": "Origin",
    "user": "User",
    "details": "Details",
    "noGeneratedAccessToken": "No generated access token",
    "generatedAccessTokenIsDisabled": "Generated access token is disabled when no user is selected",
    "clientList": "Clients",
    "clientSettings": "Client details",
    "selectEncryptionType": "Select Encryption type",
    "generalSettings": "General Settings",
    "capabilityConfig": "Capability config",
    "clientsExplain": "Clients are applications and services that can request authentication of a user",
    "createSuccess": "Client created successfully",
    "createError": "Could not create client: '{{error}}'",
    "clientImportError": "Could not import client",
    "clientSaveSuccess": "Client successfully updated",
    "clientSaveError": "Client could not be updated:",
    "clientImportSuccess": "Client imported successfully",
    "clientDelete": "Delete {{clientId}} ?",
    "clientDeletedSuccess": "The client has been deleted",
    "clientDeleteError": "Could not delete client: {{error}}",
    "clientDeleteConfirmTitle": "Delete client?",
    "disableConfirmTitle": "Disable client?",
    "downloadAdapterConfig": "Download adapter config",
    "disableConfirm": "If you disable this client, you cannot initiate a login or obtain access tokens.",
    "clientDeleteConfirm": "If you delete this client, all associated data will be removed.",
    "clientAuthentication": "Client authentication",
    "authentication": "Authentication",
    "authenticationFlow": "Authentication flow",
    "standardFlow": "Standard flow",
    "directAccess": "Direct access",
    "serviceAccount": "Service account roles",
    "enableServiceAccount": "Enable service account roles",
    "displayOnClient": "Display client on screen",
    "consentScreenText": "Client consent screen text",
    "loginSettings": "Login settings",
    "accessSettings": "Access settings",
    "rootUrl": "Root URL",
    "validRedirectUri": "Valid redirect URIs",
    "loginTheme": "Login theme",
    "consentRequired": "Consent required",
    "clientAuthenticator": "Client Authenticator",
    "clientSecret": "Client secret",
    "regenerate": "Regenerate",
    "confirmClientSecretTitle": "Regenerate secret for this client?",
    "confirmClientSecretBody": "If you regenerate secret, the Keycloak database will be updated and you will need to download a new adapter for this client.",
    "confirmAccessTokenTitle": "Regenerate registration access token?",
    "confirmAccessTokenBody": "If you regenerate registration access token, the access data regarding the client registration service will be updated.",
    "clientSecretSuccess": "Client secret regenerated",
    "clientSecretError": "Could not regenerate client secret due to: {{error}}",
    "registrationAccessToken": "Registration access token",
    "accessTokenSuccess": "Access token regenerated",
    "accessTokenError": "Could not regenerate access token due to: {{error}}",
    "signatureAlgorithm": "Signature algorithm",
    "subject": "Subject DN",
    "searchForClient": "Search for client"
  }
}
